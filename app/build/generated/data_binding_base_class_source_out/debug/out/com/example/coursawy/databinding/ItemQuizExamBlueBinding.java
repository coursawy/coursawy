// Generated by view binder compiler. Do not edit!
package com.example.coursawy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.coursawy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemQuizExamBlueBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout cardview;

  @NonNull
  public final TextView doctorName;

  @NonNull
  public final TextView passOrfail;

  @NonNull
  public final TextView questions;

  @NonNull
  public final TextView start;

  @NonNull
  public final TextView subject;

  private ItemQuizExamBlueBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout cardview, @NonNull TextView doctorName,
      @NonNull TextView passOrfail, @NonNull TextView questions, @NonNull TextView start,
      @NonNull TextView subject) {
    this.rootView = rootView;
    this.cardview = cardview;
    this.doctorName = doctorName;
    this.passOrfail = passOrfail;
    this.questions = questions;
    this.start = start;
    this.subject = subject;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemQuizExamBlueBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemQuizExamBlueBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_quiz_exam_blue, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemQuizExamBlueBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout cardview = (ConstraintLayout) rootView;

      id = R.id.doctorName;
      TextView doctorName = rootView.findViewById(id);
      if (doctorName == null) {
        break missingId;
      }

      id = R.id.passOrfail;
      TextView passOrfail = rootView.findViewById(id);
      if (passOrfail == null) {
        break missingId;
      }

      id = R.id.questions;
      TextView questions = rootView.findViewById(id);
      if (questions == null) {
        break missingId;
      }

      id = R.id.start;
      TextView start = rootView.findViewById(id);
      if (start == null) {
        break missingId;
      }

      id = R.id.subject;
      TextView subject = rootView.findViewById(id);
      if (subject == null) {
        break missingId;
      }

      return new ItemQuizExamBlueBinding((ConstraintLayout) rootView, cardview, doctorName,
          passOrfail, questions, start, subject);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
