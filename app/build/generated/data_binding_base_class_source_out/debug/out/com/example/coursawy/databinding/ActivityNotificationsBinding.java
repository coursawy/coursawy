// Generated by view binder compiler. Do not edit!
package com.example.coursawy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.coursawy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backIv;

  @NonNull
  public final TextView examTitleTv;

  @NonNull
  public final RecyclerView notificationRecyclerView;

  @NonNull
  public final LinearLayout notifyAppBar;

  private ActivityNotificationsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backIv, @NonNull TextView examTitleTv,
      @NonNull RecyclerView notificationRecyclerView, @NonNull LinearLayout notifyAppBar) {
    this.rootView = rootView;
    this.backIv = backIv;
    this.examTitleTv = examTitleTv;
    this.notificationRecyclerView = notificationRecyclerView;
    this.notifyAppBar = notifyAppBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notifications, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_iv;
      ImageView backIv = rootView.findViewById(id);
      if (backIv == null) {
        break missingId;
      }

      id = R.id.exam_title_tv;
      TextView examTitleTv = rootView.findViewById(id);
      if (examTitleTv == null) {
        break missingId;
      }

      id = R.id.notification_recycler_view;
      RecyclerView notificationRecyclerView = rootView.findViewById(id);
      if (notificationRecyclerView == null) {
        break missingId;
      }

      id = R.id.notify_app_bar;
      LinearLayout notifyAppBar = rootView.findViewById(id);
      if (notifyAppBar == null) {
        break missingId;
      }

      return new ActivityNotificationsBinding((ConstraintLayout) rootView, backIv, examTitleTv,
          notificationRecyclerView, notifyAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
